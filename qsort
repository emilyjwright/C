// ***
// *** You MUST modify this file.
// ***

#include <stdio.h>
#include <stdbool.h>
#include <string.h>

#ifdef TEST_COUNTINT
int countInt(char * filename)
{
  FILE *fptr;
  int count = 0; //count for the number of integers in the file
  int val; //placeholder for fscanf

  fptr = fopen(filename, "r");
  if (fptr == NULL)
  {
   return -1;
  }

  while (fscanf(fptr, "%d", &val) == 1)
  {
   count++;
  }

  fclose(fptr);

  return count; //returns number of ints to main

  // count the number of integers in the file
  // Please notice that if a file contains
  // 124 378 -56
  // There are three integers: 124, 378, -56
  // DO NOT count individual character '1', '2', '4' ...
  //
  // If fopen fails, return -1

  // remember to fclose if fopen succeeds
}
#endif
#ifdef TEST_READINT
bool readInt(char* filename, int * intArr, int size)
{
  FILE *fptr;
  int val; //placeholder for fscanf
  int count = 0; //count for number of ints
  fptr = fopen(filename, "r");
  if (fptr == NULL)
  {
   return false;
  }

  while(fscanf(fptr, "%d", &val) == 1)
  {
   if (count < size)
   {
    intArr[count] = val; //writes val to array
   }
   count++;
  }
  fclose(fptr);
  if (count == size)
  {
   return true;
  }
  else
  {
   return false;
  }
  // if fopen fails, return false
  // read integers from the file.
  // 
  //
  // if the number of integers is different from size (too
  // few or too many) return false
  // 
  // if everything is fine, fclose and return true
  return true;
}
#endif
#ifdef TEST_COMPAREINT
int compareInt(const void *p1, const void *p2)
{
  const int *ptr1 = (const int *) p1;
  const int *ptr2 = (const int *) p2;

  if (*ptr1 < *ptr2)
  {
   return -1;
  }
  if (*ptr1 == *ptr2)
  {
   return 0;
  }
  return 1;
  // needed by qsort
  //
  // return an integer less than, equal to, or greater than zero if
  // the first argument is considered to be respectively less than,
  // equal to, or greater than the second.
}
#endif

#ifdef TEST_WRITEINT
bool writeInt(char* filename, int * intArr, int size)
{
  FILE *fptr;
  int i; //loop variable

  fptr = fopen(filename, "w");
  if (fptr == NULL)
  {
   return false;
  }

  for(i = 0; i < size; i++)
  {
   fprintf(fptr, "%d\n", intArr[i]);
  }

  fclose(fptr);

  return true;

  // if fopen fails, return false
  // write integers to the file.
  // one integer per line
  // 
  // fclose and return true
}
#endif
